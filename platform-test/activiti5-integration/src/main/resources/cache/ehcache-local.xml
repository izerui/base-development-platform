<?xml version="1.0" encoding="UTF-8"?>
<ehcache>  
        <!--
            cache配置：
            对象在内存中的最大数量:
        maxElementsInMemory: 
                因为内存是有限的，所以必须用maxElementsInMemory(必填项)设置每类对象在内存中的最大数量。
                ehcache_failsafe.xml 中为10000。
        
               到达内存中最大量时的过期/移出算法:
               eternal:
               如果为true，则永不过期，忽略后两个参数的设置。ehcache_failsafe.xml 为false. 
               
                timeToIdleSeconds:
                以创建时间为基准开始计算的超时时长，默认为0，永不过时。ehcache_failsafe.xml 设为120秒。
                 
                timeToLiveSeconds:
                在创建时间和最近访问时间中取出离现在最近的时间作为基准计算的超时时长，默认为0，永不过时。
                ehcache_failsafe.xml 设为120秒。
                 
                如果timeToIdleSeconds和timeToLiveSeconds同时存在，则取出timeToIdleSeconds、timeToLiveSeconds最小的值，
                即min(timeToIdleSeconds,timeToLiveSeconds)，表示只要有一个超时成立即算超时。
                
                移出算法：如果经过失效算法后，还是有很多有效的缓存，则执行清除算法。清除算法由两个参数组成： 
                memoryStoreEvictionPolicy: 默认为LRU(最近最少访问),另有先进先出(FIFO)，最少访问次数(LFU) 
                overflowToDisk：为true，则将清除出来的缓存持久化到磁盘，否则人道毁灭之。
                
                储存到硬盘：
                maxElementsOnDisk:
                默认为0，无限多。ehcache_failsafe.xml为10000000。
                 
                diskExpiryThreadIntervalSeconds:
                使用过期算法清除磁盘中失效对象的间隔，默认为120秒。  
                
                diskSpoolBufferSizeMB:
                默认为30M。  
                
                重启时缓存持久化:
                diskPersistent:
                当应用重启时，可将缓存先持久化到硬盘，重启后再行载入，节省大量的重新从数据库载入。但只适合那些缓存不怎么变化，
                或者有特殊机制保证重\启后应用能接收到重启这段时间里缓存变化信息的情况。
                
                cacheEventListenerFactory配置: 
                eplicateAsynchronously:
                对象同步是否异步完成，默认为true。如果比较紧急就设为false。 在一致性时间性要求不强的时候，设为异步可大大提供性能，
                因为它是异步立即返回的，而且可以批量提交。
                 
                replicateUpdatesViaCopy:
                是否将对象变更复制到所有节点，还是只是发送一个失效信息，让对方该缓存失效，当对方需要该缓存时重新计算载入。 
                默认为true。鉴于对象复制的消耗挺大的，又有锁的问题，而且对方也未必需要该对象，所以此属性建议设为false。
                如果业务上真的需要设为true时，就可考虑使用Terracotta了。 
                
                replicatePuts:
                增加对象时是否同步，默认为true，如果replicateUpdatesViaCopy为false，选择了失效算法，所以replicatePuts 要设为false。 
                
                replicateUpdates:
                修改加对象时是否同步，默认为true
                
                replicateRemovals:
                删除加对象时是否同步，默认为true
        -->
    
    <diskStore path="java.io.tmpdir/platform/ehcache"/>
    
    <!-- <cacheManagerPeerProviderFactory class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory" 
                                                                         properties="peerDiscovery=automatic,multicastGroupAddress=230.0.0.1,multicastGroupPort=4446" />
        
        <cacheManagerPeerListenerFactory class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory" /> -->
        
    <defaultCache maxElementsInMemory="10000" eternal="false"  timeToIdleSeconds="300" timeToLiveSeconds="600" overflowToDisk="true"/>
    
    <!-- shiro授权的缓存名称 -->
    <cache name="shiroAuthorizationCache" maxElementsInMemory="10000" eternal="true">
            <!-- <cacheEventListenerFactory class="net.sf.ehcache.distribution.RMICacheReplicatorFactory" properties="replicateAsynchronously=true,replicatePuts=false,replicateUpdatesViaCopy=false"/> -->
    </cache>
    
     <!-- shiro认证的缓存名称 -->
    <cache name="shiroAuthenticationCache" maxElementsInMemory="10000" eternal="false" memoryStoreEvictionPolicy="LRU">
            <!-- <cacheEventListenerFactory class="net.sf.ehcache.distribution.RMICacheReplicatorFactory" properties="replicateAsynchronously=true,replicatePuts=false,replicateUpdatesViaCopy=false"/> -->
    </cache>
    
    <cache name="shiroActiveSessionCache" maxElementsInMemory="10000" eternal="false" timeToLiveSeconds="1200" memoryStoreEvictionPolicy="LRU">
            <!-- <cacheEventListenerFactory class="net.sf.ehcache.distribution.RMICacheReplicatorFactory" properties="replicateAsynchronously=true,replicatePuts=false,replicateUpdatesViaCopy=false"/> -->
    </cache>
    <cache name="resourceList" maxElementsInMemory="10000" eternal="true" overflowToDisk="true"/>
</ehcache>